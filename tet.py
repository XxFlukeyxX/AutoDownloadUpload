import os
import re
import pdfplumber
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.firefox.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.firefox import GeckoDriverManager
import time
from plyer import notification

# ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
email = "pichai_jo"
password = "CSautomation"

def show_notification(title, message):
    notification.notify(
        title=title,
        message=message,
        app_name="PDF Uploader",
        timeout=10  # ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    )

# üìÅ 1Ô∏è‚É£ **‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢**
def get_files_in_subfolders(download_folder):
    files = []
    for root, dirs, filenames in os.walk(download_folder):
        for filename in filenames:
            if filename.endswith(".pdf"):
                files.append(os.path.join(root, filename))
    return files

# üìò 2Ô∏è‚É£ **‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå PDF**
def extract_pdf_data(pdf_path):
    with pdfplumber.open(pdf_path) as pdf:
        text = ''.join(page.extract_text() or '' for page in pdf.pages)
    return text

# üìÖ 3Ô∏è‚É£ **‡∏î‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å PDF ‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏•‡∏Ç‡πÑ‡∏ó‡∏¢‡πÄ‡∏õ‡πá‡∏ô ‡∏Ñ.‡∏®.**
def extract_thai_date(pdf_data):
    thai_months = {
        "‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°": "01", "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå": "02", "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°": "03", "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô": "04",
        "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°": "05", "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô": "06", "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°": "07", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°": "08",
        "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô": "09", "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°": "10", "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô": "11", "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°": "12"
    }
    try:
        date_match = re.search(r'(\d{1,2})\s(‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°|‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå|‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°|‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô|‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°|‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô|‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°|‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°|‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô|‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°|‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô|‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°)\s(‡πí‡πï\d{2})', pdf_data)
        if date_match:
            day, month_thai, year_thai = date_match.groups()
            day = day.translate(str.maketrans("‡πê‡πë‡πí‡πì‡πî‡πï‡πñ‡πó‡πò‡πô", "0123456789"))
            year = str(int(year_thai.translate(str.maketrans("‡πê‡πë‡πí‡πì‡πî‡πï‡πñ‡πó‡πò‡πô", "0123456789"))) - 543)
            month = thai_months[month_thai]
            return f"{day}/{month}/{year}"
        return "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"
    except Exception as e:
        print(f"Error: {e}")
        return "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà"

# üìÖ 4Ô∏è‚É£ **‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô Date Picker ‡πÇ‡∏î‡∏¢‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£**
def select_date_in_datepicker(driver, day, month, year):
    thai_year = str(int(year) + 543)  # ‡πÅ‡∏õ‡∏•‡∏á‡∏õ‡∏µ ‡∏Ñ.‡∏®. ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏µ ‡∏û.‡∏®.
    thai_months = {
        "01": "‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°", "02": "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå", "03": "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°", "04": "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô",
        "05": "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°", "06": "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô", "07": "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°", "08": "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°",
        "09": "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô", "10": "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°", "11": "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô", "12": "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°"
    }
    thai_month = thai_months[month]

    date_input = driver.find_element(By.XPATH, '//*[@id="mainContentPlaceHolder_eDocumentContentCreate1_txtDocumentDate"]')
    date_input.click()
    time.sleep(1)

    while True:
        current_title = driver.find_element(By.XPATH, '//*[@id="mainContentPlaceHolder_eDocumentContentCreate1_txtDocumentDatetCalendarExtender_title"]').text
        if thai_month in current_title and thai_year in current_title:
            break
        prev_button = driver.find_element(By.XPATH, '//*[@id="mainContentPlaceHolder_eDocumentContentCreate1_txtDocumentDatetCalendarExtender_prevArrow"]')
        prev_button.click()
        time.sleep(1)

    for row in range(6):
        for col in range(7):
            try:
                day_element = driver.find_element(By.XPATH, f'//*[@id="mainContentPlaceHolder_eDocumentContentCreate1_txtDocumentDatetCalendarExtender_day_{row}_{col}"]')
                if day_element.text == str(int(day)):
                    day_element.click()
                    return
            except Exception:
                pass

# üìÇ **‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå**
download_folder = r"C:\\Users\\mikot\\Desktop\\test"
files_in_folder = get_files_in_subfolders(download_folder)

def save_uploaded_files(uploaded_files):
    with open('uploaded_files.json', 'w', encoding='utf-8') as f:
        json.dump(uploaded_files, f)

def load_uploaded_files():
    if os.path.exists('uploaded_files.json'):
        with open('uploaded_files.json', 'r', encoding='utf-8') as f:
            return json.load(f)
    return []

uploaded_files = load_uploaded_files()
pdf_files = [file for file in files_in_folder if file.endswith(".pdf") and file not in uploaded_files]

if pdf_files:
    latest_file = pdf_files[0]
    pdf_data = extract_pdf_data(latest_file)
    document_name_match = re.search(r'‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á[:\s]*(.*)', pdf_data, re.MULTILINE)
    document_name = document_name_match.group(1).strip() if document_name_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á"
    document_code_match = re.search(r'‡∏ó‡∏µ\s*[^\S\r\n]*[‡∏ó‡∏µ‡πà:]*\s*(.*?/\d+)', pdf_data, re.MULTILINE)
    document_code = document_code_match.group(1).strip() if document_code_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£"
    impact_name_match = re.search(r'‡πÄ‡∏£‡∏µ‡∏¢‡∏ô[:\s]*(.*)', pdf_data, re.MULTILINE)
    impact_name = impact_name_match.group(1).strip() if impact_name_match else "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"
    document_date = extract_thai_date(pdf_data)

service = Service(GeckoDriverManager().install())
driver = webdriver.Firefox(service=service)

try:
    driver.get("https://e-doc.rmutto.ac.th/home.aspx")
    time.sleep(5)
    driver.find_element(By.XPATH, '//*[@id="mainContentPlaceHolder_txtEmail"]').send_keys(email)
    driver.find_element(By.XPATH, '//*[@id="mainContentPlaceHolder_txtPassword"]').send_keys(password)
    driver.find_element(By.XPATH, '//*[@id="mainContentPlaceHolder_bttLogin"]').click()
    time.sleep(5)

    for file_path in pdf_files:
        file_input = WebDriverWait(driver, 20).until(
            EC.presence_of_element_located((By.XPATH, "//*[@id='mainContentPlaceHolder_eDocumentContentCreate1_AjaxFileUpload1_Html5InputFile']"))
        )
        file_input.send_keys(file_path)
        uploaded_files.append(file_path)
        save_uploaded_files(uploaded_files)

except Exception as e:
    print(f"Error: {e}")

finally:
    driver.quit()
    show_notification("‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô", f"‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {len(uploaded_files)} ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
